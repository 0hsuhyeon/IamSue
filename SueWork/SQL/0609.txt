
--1 count: 갯수세기
SELECT count(*)
FROM Emp;

--2 봉급의 합계 구하기
SELECT --ENAME, 싱글과 합은 답 도출이 불가능
SUM(SAL)
FROM EMP; 

SELECT DEPTNO, SUM(SAL)
FROM EMP
GROUP BY DEPTNO; --0

--3 부서번호 출력

--4 사원들이 속한 부서의 수
SELECT COUNT(DISTINCT DEPTNO)
FROM EMP;


--5 중복제거
SELECT SUM(DISTINCT SAL),
       SUM(ALL SAL),
       SUM(SAL)
FROM EMP;

--6 사원들의 정보
SELECT COUNT(*)
FROM EMP;

--7 사원들의 수(행의 수)
SELECT COUNT(*)
FROM EMP;

--8 30번 부서의 사원 수 
SELECT COUNT(*)
FROM EMP
WHERE DEPTNO = 30;

--9 
SELECT COUNT(DISTINCT SAL)
       COUNT(ALL SAL)-- all 생략가능
       COUNT (SAL)
FROM EMP;

--10 보너스가 정해진 사람들
SELECT COUNT(COMM)
FROM EMP; -- 0까지 카운트 되므로 받는 사람을 고를 수 없음 

SELECT * FROM EMP;

--11 보너스를 받는 사람
SELECT COUNT(COMM)
FROM EMP
WHERE COMM>0; -- 조건을 붙여야 함

--12 보너스가 NULL이 아닌 사람
SELECT COUNT(*) -- 아래에 조건이 있으므로 *으로 표기하여도 무방(아래 조건이 있는 전체 행을 읽음)
FROM EMP
WHERE COMM is not Null;

--13 봉급의 최대치
SELECT MAX(SAL)
FROM EMP;

--14 10번 부서의 최고 봉급액
SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO =10;


--15 10번 부서의 최저 봉급액
SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 10;

--16 10번 부서의 평균 봉급액(AVG)
SELECT AVG(SAL)
FROM EMP
WHERE DEPTNO = 10;

--17 최근 입사일
SELECT MAX(HIREDATE)
FROM EMP;

--18 가장 먼저 입사한 사원의 입사일
SELECT MIN(HIREDATE)
FROM EMP;

--19 20번 부서에서 최고참의 입사일
SELECT MIN(HIREDATE)
FROM EMP
WHERE DEPTNO = 20;

--20 30번 부서의 평균 봉급액
SELECT AVG(SAL)
FROM EMP
WHERE DEPTNO =30;

--21 10번 부서, 20번 부서, 30번 부서의 평균 봉급액 구하기(UNION ALL)
SELECT TRUNC(AVG(SAL)) AS AVG_SAL, '10' AS DEPTNO
FROM EMP
WHERE DEPTNO =10
UNION ALL 
SELECT TRUNC(AVG(SAL)) AS AVG_SAL, '20' AS DEPTNO
FROM EMP
WHERE DEPTNO =20 
UNION ALL
SELECT TRUNC(AVG(SAL)) AS AVG_SAL, '30' AS DEPTNO
FROM EMP
WHERE DEPTNO =30;

--22 부서 및 직급별 평균 봉급
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

--23 부서 및 직급별 평균 봉급 구하는데 봉급 평균이 2000이상인 사원들 정보만
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL)>=2000
ORDER BY DEPTNO, JOB;

--다른 결과 
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
WHERE SAL>=2000
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

--24 봉급이 3000 이하인 사람들을 대상으로 부서별 직급별 평균 봉급이 2000이상인
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
WHERE SAL>=3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL)>=2000
ORDER BY DEPTNO, JOB;

--25 부서별 직급별 사원수 최대봉급 봉급액 합계 평균 봉급 부서별 직급별 정렬
SELECT DEPTNO, JOB, COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

--26 25번과 동일 + ROLLUP(DEPTNO, JOB)요약
SELECT DEPTNO, JOB, COUNT(*),MAX(SAL),SUM(SAL),AVG(SAL)
FROM EMP
GROUP BY ROLLUP (DEPTNO,JOB)
ORDER BY DEPTNO, JOB;

--27 CUBE사용
SELECT DEPTNO, JOB, COUNT(*),MAX(SAL),SUM(SAL),ROUND(AVG(SAL))
FROM EMP
GROUP BY CUBE (DEPTNO,JOB)
ORDER BY DEPTNO, JOB;

--28 ROLL UP을 JOB에 대해서만
SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY DEPTNO, ROLLUP(JOB);

--29번 
SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY job, ROLLUP(DEPTNO);

--30 GROUPING SETS -- 지정한 모든 열을 대그룹으로 처리해서 출력
SELECT DEPTNO, JOB, COUNT(*)
FROM EMP
GROUP BY GROUPING SETS(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

--31 GROUPING 함수 0: 열이 그룹핑되었음을 알림 / 1: 그룹핑이 안되었음을 알림
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL),
       GROUPING(DEPTNO),
       GROUPING(JOB)
FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

--32 DECODE:복호화 
SELECT DECODE(GROUPING(DEPTNO), 1, 'ALL_DEPT', DEPTNO) AS DEPTNO, -- 1 대신에 ALL DEPT으로
       DECODE(GROUPING(JOB), 1, 'ALL_JOB', JOB) AS JOB, -- 1 대신 ALL GOB으로 
       COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
  FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

--33 
SELECT DEPTNO, JOB, COUNT(*), SUM(SAL),
       GROUPING(DEPTNO),
       GROUPING(JOB),
       GROUPING_ID(DEPTNO, JOB) -- 그룹핑 항목이 2개일때 00이면 0, 01이면 1, 10이면 2, 11이면 3 (2진수)
  FROM EMP
GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;

--34 LISTAGG ~ WITHIN GROUP :: 그룹화 데이터를 하나의 열에 가로로 나열하여 출력하는데 사용 
SELECT DEPTNO,
       LISTAGG(ENAME, ', ')
       WITHIN GROUP(ORDER BY SAL DESC) AS ENAMES
  FROM EMP
GROUP BY DEPTNO;

--DESE:  MAX - MIN 내림차수  / ASC: MIN - MAX 오름차수

--35 
SELECT DEPTNO, JOB, MAX(SAL)
  FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

--36 PIVOT : 엑셀 피벗테이블과 같은 기능 
SELECT *
FROM(SELECT DEPTNO, JOB, SAL FROM EMP)-- 인라인뷰: 원하는 것만 뽑아온 임시 테이블 
PIVOT(MAX(SAL)FOR DEPTNO IN (10, 20, 30))-- 보여주고싶은 것을 추출 ('FOR' 에 대한 'MAX'를 보고싶다)
ORDER BY JOB; -- 정렬 

--37번 
SELECT *
FROM(SELECT JOB, DEPTNO, SAL
         FROM EMP)
PIVOT(MIN(SAL)
     FOR JOB IN ('CLERK' AS CLERK,
                 'SALESMAN' AS SALESMAN,
                 'PRESIDENT' AS PRESIDENT,
                 'MANAGER' AS MANAGER,
                 'ANALYST' AS ANALYST)
     )
ORDER BY DEPTNO;

--38 
SELECT DEPTNO,
       MAX(DECODE(JOB, 'CLERK', SAL)) AS "CLERK", -- JOB의 이름이 'CLERK'인 사람의 'SAL'의 MAX를 구해라
       MAX(DECODE(JOB, 'SALESMAN', SAL)) AS "SALESMAN",
       MAX(DECODE(JOB, 'PRESIDENT', SAL)) AS "PRESIDENT",
       MAX(DECODE(JOB, 'MANAGER', SAL)) AS "MANAGER",
       MAX(DECODE(JOB, 'ANALYST', SAL)) AS "ANALYST"
  FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

--39
SELECT *
  FROM(SELECT DEPTNO,
              MAX(DECODE(JOB, 'CLERK' , SAL)) AS "CLERK",
              MAX(DECODE(JOB, 'SALESMAN' , SAL)) AS "SALESMAN",
              MAX(DECODE(JOB, 'PRESIDENT', SAL)) AS "PRESIDENT",
              MAX(DECODE(JOB, 'MANAGER' , SAL)) AS "MANAGER",
              MAX(DECODE(JOB, 'ANALYST' , SAL)) AS "ANALYST"
         FROM EMP
       GROUP BY DEPTNO
       ORDER BY DEPTNO)
UNPIVOT( -- PIVOT은 가로로 출력/ UNPIVOT은 세로(원래대로) 출력
   SAL FOR JOB IN (CLERK, SALESMAN, PRESIDENT, MANAGER,ANALYST))
ORDER BY DEPTNO, JOB;

--연습문제
--1
SELECT DEPTNO,
       TRUNC(AVG(SAL)) AS AVG_SAL, 
       MAX(SAL) AS MAX_SAL, 
       MIN(SAL) AS MIN_SAL, 
       COUNT(*) AS CNT
FROM EMP
GROUP BY DEPTNO;

--2
SELECT JOB, 
       COUNT(*) 
FROM EMP
GROUP BY JOB
HAVING COUNT(*) >2;

--3
SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, -- 단일행에 대한 이야기
       DEPTNO,
       COUNT(*) AS CNT -- 그룹함수의 이야기
FROM EMP;
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO;  
-- 단일행을 그룹으로 만들어준다

SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR,
       DEPTNO,
       COUNT(*) AS CNT
  FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO; 



--4
SELECT NVL2(COMM, 'O', 'X') AS EXIST_COMM,
       COUNT(*) AS CNT
FROM EMP
GROUP BY NVL2(COMM, 'O', 'X');

--5
SELECT DEPTNO,
       TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR,
       COUNT(*) AS CNT,
       MAX(SAL) AS MAX_SAL,
       SUM(SAL) AS SUM_SAL,
       AVG(SAL) AS AVG_SAL
FROM EMP
GROUP BY ROLLUP(DEPTNO, TO_CHAR(HIREDATE, 'YYYY')); 

